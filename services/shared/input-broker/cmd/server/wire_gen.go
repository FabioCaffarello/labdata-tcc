// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"go.mongodb.org/mongo-driver/mongo"
	"libs/golang/ddd/adapters/http/handlers/input-broker/handlers"
	"libs/golang/ddd/domain/entities/input-broker/entity"
	"libs/golang/ddd/domain/repositories/database/mongodb/input-broker/repository"
	"libs/golang/ddd/events/input-broker/event"
	"libs/golang/shared/go-events/amqp_events"
)

// Injectors from wire.go:

func NewWebServiceInputHandler(client *mongo.Client, eventDispatcher amqpevents.EventDispatcherInterface, database string) *handlers.WebInputHandler {
	inputRepository := repository.NewInputRepository(client, database)
	inputCreated := event.NewInputCreated()
	webInputHandler := handlers.NewWebInputHandler(inputRepository, eventDispatcher, inputCreated)
	return webInputHandler
}

// wire.go:

var setInputRepositoryDependency = wire.NewSet(repository.NewInputRepository, wire.Bind(
	new(entity.InputRepositoryInterface),
	new(*repository.InputRepository),
),
)

var setInputCreatedEvent = wire.NewSet(event.NewInputCreated, wire.Bind(new(amqpevents.EventInterface), new(*event.InputCreated)))
