{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"summary/","title":"Summary","text":"<ul> <li>Architecture</li> </ul> <ul> <li>Libraries</li> <li>Dependency Graph</li> </ul>"},{"location":"reference/libs/golang/shared/id/go-md5/","title":"go-md5","text":"<p><code>go-md5</code> is a Go library that provides utilities for generating MD5-based IDs from various data types. This library leverages the <code>type-tools</code> library to convert different types of data into a string representation before generating the MD5 hash.</p>"},{"location":"reference/libs/golang/shared/id/go-md5/#features","title":"Features","text":"<ul> <li>Generate MD5-based IDs from various data types including:</li> <li><code>string</code></li> <li><code>float64</code></li> <li><code>int</code> and other integer types</li> <li><code>bool</code></li> <li><code>map[string]interface{}</code></li> <li><code>map[string]string</code></li> </ul>"},{"location":"reference/libs/golang/shared/id/go-md5/#usage","title":"Usage","text":""},{"location":"reference/libs/golang/shared/id/go-md5/#generating-an-id-from-a-string","title":"Generating an ID from a String","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/id/go-md5\"\n)\n\nfunc main() {\n    id := md5id.NewID(\"test\")\n    fmt.Println(id) // Output: 098f6bcd4621d373cade4e832627b4f6\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/id/go-md5/#generating-an-id-from-a-float64","title":"Generating an ID from a Float64","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/id/go-md5\"\n)\n\nfunc main() {\n    id := md5id.NewID(123.456)\n    fmt.Println(id) // Output: f6e809317508ea1fdcb5e6d878e166ef\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/id/go-md5/#generating-an-id-from-a-map","title":"Generating an ID from a Map","text":""},{"location":"reference/libs/golang/shared/id/go-md5/#map-of-string-to-interface","title":"Map of String to Interface","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/id/go-md5\"\n)\n\nfunc main() {\n    data := map[string]interface{}{\n        \"foo\": \"bar\",\n        \"baz\": 123,\n    }\n    id := md5id.NewID(data)\n    fmt.Println(id) // Output: 7cc94a32929de9da271e6f19ef1392d7\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/id/go-md5/#map-of-string-to-string","title":"Map of String to String","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/id/go-md5\"\n)\n\nfunc main() {\n    data := map[string]string{\n        \"foo\": \"bar\",\n        \"baz\": \"qux\",\n    }\n    id := md5id.NewID(data)\n    fmt.Println(id) // Output: 491ebd8bf73d6a9b2fabf44575e98fbe\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/id/go-md5/#generating-an-id-from-an-integer","title":"Generating an ID from an Integer","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/id/go-md5\"\n)\n\nfunc main() {\n    id := md5id.NewID(123)\n    fmt.Println(id) // Output: 202cb962ac59075b964b07152d234b70\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/id/go-md5/#generating-an-id-from-a-boolean","title":"Generating an ID from a Boolean","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/id/go-md5\"\n)\n\nfunc main() {\n    id := md5id.NewID(true)\n    fmt.Println(id) // Output: b326b5062b2f0e69046810717534cb09\n\n    id = md5id.NewID(false)\n    fmt.Println(id) // Output: 68934a3e9455fa72420237eb05902327\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/id/go-md5/#testing","title":"Testing","text":"<p>To run the tests for the <code>md5id</code> package, use the following command:</p> <pre><code>npx nx test libs-golang-shared-id-go-md5\n</code></pre>"},{"location":"reference/libs/golang/shared/id/go-md5/docs/godoc/","title":"Godoc","text":""},{"location":"reference/libs/golang/shared/id/go-md5/docs/godoc/#md5id","title":"md5id","text":"<pre><code>import \"libs/golang/shared/id/go-md5\"\n</code></pre>"},{"location":"reference/libs/golang/shared/id/go-md5/docs/godoc/#index","title":"Index","text":"<ul> <li>type ID</li> <li>func NewID(data interface{}) ID</li> </ul>"},{"location":"reference/libs/golang/shared/id/go-md5/docs/godoc/#type-id","title":"type ID","text":"<p>ID type definition</p> <pre><code>type ID string\n</code></pre> <p></p>"},{"location":"reference/libs/golang/shared/id/go-md5/docs/godoc/#func-newid","title":"func NewID","text":"<pre><code>func NewID(data interface{}) ID\n</code></pre> <p>NewID generates an ID from various types of data</p> <p>Generated by gomarkdoc</p>"},{"location":"reference/libs/golang/shared/type-tools/","title":"type-tools","text":"<p><code>type-tools</code> is a Go library that provides utilities for converting various data types (Go's built-in types). This library is designed to be simple and efficient, making it easy to handle different types of data in a consistent manner.</p>"},{"location":"reference/libs/golang/shared/type-tools/#features","title":"Features","text":"<ul> <li>Convert <code>map[string]interface{}</code> to a sorted string representation.</li> <li>Convert <code>map[string]string</code> to a sorted string representation.</li> <li>Convert <code>float64</code> to a string representation.</li> <li>Convert <code>interface{}</code> to specific Go built-in types.</li> <li>Generic function to convert any type to a string.</li> </ul>"},{"location":"reference/libs/golang/shared/type-tools/#usage","title":"Usage","text":""},{"location":"reference/libs/golang/shared/type-tools/#convert-mapstringinterface-to-string","title":"Convert <code>map[string]interface{}</code> to String","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/type-tools\"\n)\n\nfunc main() {\n    data := map[string]interface{}{\n        \"foo\": \"bar\",\n        \"baz\": 123,\n    }\n    str := typetools.MapInterfaceToString(data)\n    fmt.Println(str) // Output: baz:123;foo:bar;\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/type-tools/#convert-mapstringstring-to-string","title":"Convert <code>map[string]string</code> to String","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/type-tools\"\n)\n\nfunc main() {\n    data := map[string]string{\n        \"foo\": \"bar\",\n        \"baz\": \"qux\",\n    }\n    str := typetools.MapStringToString(data)\n    fmt.Println(str) // Output: baz:qux;foo:bar;\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/type-tools/#convert-various-types-to-string","title":"Convert Various Types to String","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/type-tools\"\n)\n\nfunc main() {\n    str := typetools.ToString(\"test\")\n    fmt.Println(str) // Output: test\n\n    str = typetools.ToString(123.456)\n    fmt.Println(str) // Output: 123.456000\n\n    data := map[string]interface{}{\n        \"foo\": \"bar\",\n        \"baz\": 123,\n    }\n    str = typetools.ToString(data)\n    fmt.Println(str) // Output: baz:123;foo:bar;\n\n    dataString := map[string]string{\n        \"foo\": \"bar\",\n        \"baz\": \"qux\",\n    }\n    str = typetools.ToString(dataString)\n    fmt.Println(str) // Output: baz:qux;foo:bar;\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/type-tools/#convert-interface-to-specific-types","title":"Convert Interface to Specific Types","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"libs/golang/shared/type-tools\"\n)\n\nfunc main() {\n    var intf interface{} = \"123\"\n    str, err := typetools.ToString(intf)\n    if err != nil {\n        fmt.Println(\"Error:\", err)\n    } else {\n        fmt.Println(str) // Output: 123\n    }\n\n    var num interface{} = 123.456\n    floatStr, err := typetools.ToFloat64(num)\n    if err != nil {\n        fmt.Println(\"Error:\", err)\n    } else {\n        fmt.Println(floatStr) // Output: 123.456\n    }\n}\n</code></pre>"},{"location":"reference/libs/golang/shared/type-tools/#testing","title":"Testing","text":"<p>To run the tests for <code>typetools</code> package, use the following command:</p> <pre><code>npx nx test libs-golang-shared-type-tools\n</code></pre>"},{"location":"reference/libs/golang/shared/type-tools/docs/godoc/","title":"Godoc","text":""},{"location":"reference/libs/golang/shared/type-tools/docs/godoc/#typetools","title":"typetools","text":"<pre><code>import \"libs/golang/shared/type-tools\"\n</code></pre>"},{"location":"reference/libs/golang/shared/type-tools/docs/godoc/#index","title":"Index","text":"<ul> <li>func MapInterfaceToString(m map[string]interface{}) string</li> <li>func MapStringToString(m map[string]string) string</li> <li>func ToFloat64(data interface{}) (float64, error)</li> <li>func ToString(data interface{}) (string, error)</li> </ul>"},{"location":"reference/libs/golang/shared/type-tools/docs/godoc/#func-mapinterfacetostring","title":"func MapInterfaceToString","text":"<pre><code>func MapInterfaceToString(m map[string]interface{}) string\n</code></pre> <p>MapInterfaceToString converts a map[string]interface{} to a sorted string</p> <p></p>"},{"location":"reference/libs/golang/shared/type-tools/docs/godoc/#func-mapstringtostring","title":"func MapStringToString","text":"<pre><code>func MapStringToString(m map[string]string) string\n</code></pre> <p>MapStringToString converts a map[string]string to a sorted string</p> <p></p>"},{"location":"reference/libs/golang/shared/type-tools/docs/godoc/#func-tofloat64","title":"func ToFloat64","text":"<pre><code>func ToFloat64(data interface{}) (float64, error)\n</code></pre> <p>ToFloat64 converts various types of data to a float64</p> <p></p>"},{"location":"reference/libs/golang/shared/type-tools/docs/godoc/#func-tostring","title":"func ToString","text":"<pre><code>func ToString(data interface{}) (string, error)\n</code></pre> <p>ToString converts various types of data to a string</p> <p>Generated by gomarkdoc</p>"}]}